/*
 * cloud-api
 *
 * Resource for managing cloud entities
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: devops@f-i-ts.de
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1Worker {
    #[serde(rename = "CRI")]
    pub CRI: String,
    #[serde(rename = "DrainTimeout", skip_serializing_if = "Option::is_none")]
    pub drain_timeout: Option<i64>,
    #[serde(rename = "HealthTimeout", skip_serializing_if = "Option::is_none")]
    pub health_timeout: Option<i64>,
    #[serde(rename = "MachineImage")]
    pub machine_image: Box<crate::models::V1MachineImage>,
    #[serde(rename = "MachineType")]
    pub machine_type: String,
    #[serde(rename = "MaxSurge")]
    pub max_surge: String,
    #[serde(rename = "MaxUnavailable")]
    pub max_unavailable: String,
    #[serde(rename = "Maximum")]
    pub maximum: i64,
    #[serde(rename = "Minimum")]
    pub minimum: i64,
    #[serde(rename = "Name")]
    pub name: String,
}

impl V1Worker {
    pub fn new(CRI: String, machine_image: crate::models::V1MachineImage, machine_type: String, max_surge: String, max_unavailable: String, maximum: i64, minimum: i64, name: String) -> V1Worker {
        V1Worker {
            CRI,
            drain_timeout: None,
            health_timeout: None,
            machine_image: Box::new(machine_image),
            machine_type,
            max_surge,
            max_unavailable,
            maximum,
            minimum,
            name,
        }
    }
}


