/*
 * cloud-api
 *
 * Resource for managing cloud entities
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: devops@f-i-ts.de
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1ClusterUsage {
    /// the end time of this cluster
    #[serde(rename = "clusterend")]
    pub clusterend: String,
    /// the cluster id of this cluster
    #[serde(rename = "clusterid")]
    pub clusterid: String,
    /// the cluster name of this cluster
    #[serde(rename = "clustername")]
    pub clustername: String,
    /// the start time of this cluster
    #[serde(rename = "clusterstart")]
    pub clusterstart: String,
    /// the duration that this cluster is running
    #[serde(rename = "lifetime")]
    pub lifetime: i64,
    /// the partition of this cluster
    #[serde(rename = "partition")]
    pub partition: String,
    /// the project id of this cluster
    #[serde(rename = "projectid")]
    pub projectid: String,
    /// the project name of this cluster
    #[serde(rename = "projectname")]
    pub projectname: String,
    /// the tenant of this cluster
    #[serde(rename = "tenant")]
    pub tenant: String,
    /// warnings that occurred when calculating the usage of this cluster
    #[serde(rename = "warnings")]
    pub warnings: Vec<String>,
}

impl V1ClusterUsage {
    pub fn new(clusterend: String, clusterid: String, clustername: String, clusterstart: String, lifetime: i64, partition: String, projectid: String, projectname: String, tenant: String, warnings: Vec<String>) -> V1ClusterUsage {
        V1ClusterUsage {
            clusterend,
            clusterid,
            clustername,
            clusterstart,
            lifetime,
            partition,
            projectid,
            projectname,
            tenant,
            warnings,
        }
    }
}


