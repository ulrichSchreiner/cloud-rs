/*
 * cloud-api
 *
 * Resource for managing cloud entities
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: devops@f-i-ts.de
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1IpUsage {
    /// the end time of this ip
    #[serde(rename = "end")]
    pub end: String,
    /// the address of this ip
    #[serde(rename = "ip")]
    pub ip: String,
    /// the duration that this ip is allocated
    #[serde(rename = "lifetime")]
    pub lifetime: i64,
    /// the project id of this ip
    #[serde(rename = "projectid")]
    pub projectid: String,
    /// the project name of this ip
    #[serde(rename = "projectname")]
    pub projectname: String,
    /// the start time of this ip
    #[serde(rename = "start")]
    pub start: String,
    /// the tenant of this ip
    #[serde(rename = "tenant")]
    pub tenant: String,
    /// the allocation uuid of this ip
    #[serde(rename = "uuid")]
    pub uuid: String,
    /// warnings that occurred when calculating the usage of this ip
    #[serde(rename = "warnings")]
    pub warnings: Vec<String>,
}

impl V1IpUsage {
    pub fn new(end: String, ip: String, lifetime: i64, projectid: String, projectname: String, start: String, tenant: String, uuid: String, warnings: Vec<String>) -> V1IpUsage {
        V1IpUsage {
            end,
            ip,
            lifetime,
            projectid,
            projectname,
            start,
            tenant,
            uuid,
            warnings,
        }
    }
}


