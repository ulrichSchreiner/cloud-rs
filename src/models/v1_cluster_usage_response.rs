/*
 * cloud-api
 *
 * Resource for managing cloud entities
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: devops@f-i-ts.de
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1ClusterUsageResponse {
    #[serde(rename = "accumulatedusage")]
    pub accumulatedusage: Box<crate::models::V1ClusterUsageAccumuluated>,
    /// the start time in the accounting window to look at
    #[serde(rename = "from")]
    pub from: String,
    /// the end time in the accounting window to look at (defaults to current system time)
    #[serde(rename = "to", skip_serializing_if = "Option::is_none")]
    pub to: Option<String>,
    /// the usage data of the individual clusters
    #[serde(rename = "usage")]
    pub usage: Vec<crate::models::V1ClusterUsage>,
}

impl V1ClusterUsageResponse {
    pub fn new(accumulatedusage: crate::models::V1ClusterUsageAccumuluated, from: String, usage: Vec<crate::models::V1ClusterUsage>) -> V1ClusterUsageResponse {
        V1ClusterUsageResponse {
            accumulatedusage: Box::new(accumulatedusage),
            from,
            to: None,
            usage,
        }
    }
}


