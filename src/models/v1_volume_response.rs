/*
 * cloud-api
 *
 * Resource for managing cloud entities
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: devops@f-i-ts.de
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1VolumeResponse {
    #[serde(rename = "ConnectedHosts")]
    pub connected_hosts: Vec<String>,
    #[serde(rename = "PartitionID")]
    pub partition_id: String,
    #[serde(rename = "ProjectID")]
    pub project_id: String,
    #[serde(rename = "ReplicaCount")]
    pub replica_count: i64,
    #[serde(rename = "Size")]
    pub size: i64,
    #[serde(rename = "Statistics")]
    pub statistics: Box<crate::models::V1VolumeStatistics>,
    #[serde(rename = "StorageClass")]
    pub storage_class: String,
    #[serde(rename = "TenantID")]
    pub tenant_id: String,
    #[serde(rename = "VolumeHandle")]
    pub volume_handle: String,
    #[serde(rename = "VolumeID")]
    pub volume_id: String,
}

impl V1VolumeResponse {
    pub fn new(connected_hosts: Vec<String>, partition_id: String, project_id: String, replica_count: i64, size: i64, statistics: crate::models::V1VolumeStatistics, storage_class: String, tenant_id: String, volume_handle: String, volume_id: String) -> V1VolumeResponse {
        V1VolumeResponse {
            connected_hosts,
            partition_id,
            project_id,
            replica_count,
            size,
            statistics: Box::new(statistics),
            storage_class,
            tenant_id,
            volume_handle,
            volume_id,
        }
    }
}


